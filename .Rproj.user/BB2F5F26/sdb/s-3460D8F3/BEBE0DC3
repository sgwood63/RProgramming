{
    "collab_server" : "",
    "contents" : "\n# Date validation\nIsDate <- function(mydate, date.format = \"%Y-%m-%d\") {\n  # Check if field is a date using as.Date that looks for unambiguous dates\n  #   Assumes date format so NA returned not Character error. \n  #   Why? with no date format, R tries two defaults then gives error. \n  #   BUT With a dateformat R returns NA\n  # Args\n  #   Suspected date and optional date format string\n  # Returns\n  #   TRUE if thinbks it is a date\n  tryCatch(!is.na(as.Date(mydate, date.format)),  \n           error = function(err) {FALSE})  \n}\n\n# the number of completely observed cases in each data file\n\ncomplete <- function(directory, id = 1:332) {\n  # directory: name of directory containing readings files\n  # id: id range of files. Files are named id.csv, with id zero filled to\n  #     3 positions, ie. 001.csv, 020,csv, 134.csv\n  # readings files are assumed to be csvs with columns:\n  #     Date \"YYYY-MM-DD\"\n  #     sulfate: empty (NA) or float\n  #     nitrate: empty (NA) or float\n  #     id: id of this sensor. 1-332 in test data set\n\n  resultFrame <- NULL\n  \n  # loop through the ids\n  \n  for (currentId in id) {\n    \n    # Generate the file name for the id\n    if (currentId < 1 || currentId > 332) {\n      print(paste(\"Invalid id:\", currentId))\n      break\n    } else if (currentId < 10) {\n      currentIdString <- paste0(c(\"00\", as.character(currentId)), collapse='')\n    } else if (currentId < 100) {\n      currentIdString <- paste0(c(\"0\", as.character(currentId)), collapse='')\n    } else {\n      currentIdString <- as.character(currentId)\n    }\n    \n    # create the full file name and path. check existence\n    \n    fileName <- paste0(c(directory, \"/\", currentIdString, \".csv\"), collapse='')\n    if (!file.exists(fileName)) {\n      print(paste(\"File does not exist: \", fileName))\n      break\n    }\n    \n    # load the file into a frame\n    frame <- read.csv(fileName)\n    \n    # count the valid readings in the file\n    readings <- nrow(\n          subset(frame, IsDate(Date) & \n                   !is.na(nitrate) &\n                   !is.na(sulfate) &\n                   ID == currentId))\n    \n    if (is.null(resultFrame)) {\n      resultFrame <- data.frame(id = currentId, nobs = readings)\n    } else {\n      resultFrame <- rbind(resultFrame, c(currentId, readings)) \n    }\n    \n  }\n\n  resultFrame\n}",
    "created" : 1467738218664.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "196573536",
    "id" : "BEBE0DC3",
    "lastKnownWriteTime" : 1467750167,
    "last_content_update" : 1467750167113,
    "path" : "~/GitHub/RProgramming/complete.R",
    "project_path" : "complete.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}